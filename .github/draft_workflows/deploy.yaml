name: Google Cloud Function Notebook Deploy

on: deployment

jobs:
  deploy:
    if: github.actor == 'pr-chatops[bot]'
    runs-on: ubuntu-latest
    steps:
      
    - uses: actions/checkout@v4

    - name: build-environment
      id: repo2docker
      uses: ./
      with:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        IMAGE_NAME: "hamelsmu/repo2docker-test"

    - name: paperspace-deploy
      id: paperspace
      run: |
        pip install gradient
        gradient apiKey ${PAPERSPACE_TOKEN}
        gradient jobs create --container ${IMAGE_NAME} --projectId ${PAPERSPACE_PROJECT_ID} --machineType K80 --ports 8888:8888
      env:
        PAPERSPACE_TOKEN: ${{ secrets.PAPERSPACE_TOKEN }}
        PAPERSPACE_PROJECT_ID: ${{ secrets.PAPERSPACE_PROJECT_ID }}
        IMAGE_NAME: ${{ steps.repo2docker.outputs.IMAGE_SHA_NAME }}

    # - uses: exelban/gcloud@master
    #   env:
    #     PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
    #     APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    #     IMAGE_NAME: ${{ steps.repo2docker.outputs.IMAGE_SHA_NAME }}
    #   with:
    #     args: --quiet beta run deploy notebook-serve-action --allow-unauthenticated --platform managed --region us-west1 --image $IMAGE_NAME
    # - run: |
    #     curl -d '{"state": "failure"}' -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/"$GITHUB_REPOSITORY"/deployments/"$DEPLOYMENT_ID"/statuses
    #   if: failure()
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #     DEPLOYMENT_ID: ${{ github.event.deployment.id }}
    # - run: |
    #     curl -d "{\"state\": \"success\", \"log_url\": \"https://console.cloud.google.com/functions/details/us-central1/predict?project=$GOOGLE_PROJECT_ID\"}" -H "Authorization: token $GITHUB_TOKEN" -H "Accept: application/vnd.github.ant-man-preview+json" https://api.github.com/repos/"$GITHUB_REPOSITORY"/deployments/"$DEPLOYMENT_ID"/statuses
    #   if: success()
    #   env:
    #     GITHUB_TOKEN: ${{ github.token }}
    #     DEPLOYMENT_ID: ${{ github.event.deployment.id }}
    #     PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
